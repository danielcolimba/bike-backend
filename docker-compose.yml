services:
  frontend:
    build:
      context: ../bike-frontend/royal-bike
      dockerfile: dockerfile
    image: my-frontend
    container_name: frontend
    ports:
      - "3000:80"  # Puerto externo 3000 redirige al 80 del contenedor
    depends_on:
      - db
      - backend
      - auth
    environment:
      - VITE_API_BASE_URL=/api
      - VITE_API_AUTH_BASE_URL=/auth
    volumes:
      - ../bike-frontend/royal-bike/nginx.conf:/etc/nginx/conf.d/default.conf


  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: bike-backend:latest
    env_file:
      - .env
    container_name: bike_backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_NAME=bikedb
      - DB_USER=danny
      - DB_PASSWORD=royal
      - DB_PORT=5432
    restart: on-failure:2
  db:
    image: postgres:15-alpine
    container_name: bike_postgres
    environment:
      POSTGRES_DB: bikedb
      POSTGRES_USER: danny
      POSTGRES_PASSWORD: royal
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "danny", "-d", "bikedb"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Commented out to avoid permission issues
    # volumes:
    #   - ./postgres_data:/var/lib/postgresql/data

  auth:
    build:
      context: ../bike-auth
      dockerfile: Dockerfile
    image: bike-auth:latest
    container_name: bike-auth-app
    ports:
      - "8001:8001"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_NAME=bikedb
      - DB_USER=danny
      - DB_PASSWORD=royal
      - DB_PORT=5432
      - DJANGO_SETTINGS_MODULE=authservice.settings
      - DEBUG=True
      - SECRET_KEY=aBc123xYz789mNoPqRsTuVwXyZ456aBc789DeF012GhI345JkL678
      - JWT_SECRET_KEY=aBc123xYz789mNoPqRsTuVwXyZ456aBc789DeF012GhI345JkL678
      - ALLOWED_ORIGINS=http://localhost:3000
      - ALLOWED_HOSTS=localhost,127.0.0.1,auth
      - PYTHONUNBUFFERED=1
    restart: on-failure:2

  redis:
    image: redis:7-alpine
    container_name: bike_redis
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: on-failure:2

  cart:
    build:
      context: ../bike-cartredis
      dockerfile: Dockerfile
    image: cartredis:optimized
    container_name: bike-cart-service
    ports:
      - "8002:8002"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAX_RETRIES=30
      - RETRY_INTERVAL=2
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: on-failure:3

networks:
  default:
    name: bike_network
